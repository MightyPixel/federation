version: 2.1

orbs:
  node: circleci/node@5.1.0

jobs:
  Cache Build:
    description: "Cache the TypeScript build"
    docker:
      - image: cimg/node:lts
    steps:
      - checkout
      - node/install-packages
      - restore_cache:
          keys:
            - build-{{ .Branch }}
      - run:
          name: Compile
          command: npm run compile
      # - persist_to_workspace:
      #     root: .
      #     paths:
      #       - ./*/dist
      #       - ./*/*.tsbuildinfo
      - save_cache:
          paths:
            - ./*/dist
            - ./*/*.tsbuildinfo
          key: build-{{ .Branch }}
  # Unfortunately cimg/node doesn't tag its images with major only, you have to specify a minor version.
  # We wouldn't need this job if it did, we could just use node/test with a matrix of node major versions.
  Test:
    description: "Run tests for a specific Node.js version"
    parameters:
      node-version:
        type: string
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - node/install:
          node-version: << parameters.node-version >>
      # node v14 defaults to npm 6, which is too old for our package-lock.json
      # should be able to remove this step when we drop node v14
      - run: npm install -g npm@latest
      - node/install-packages
      - restore_cache:
          keys:
            - build-{{ .Branch }}
      # - attach_workspace:
      #     at: .
      - run:
          name: Run tests
          command: npm run test:ci
      - store_test_results:
          path: junit.xml
  Demo:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - node/install
      - node/install-packages
      - restore_cache:
          keys:
            - build-{{ .Branch }}

workflows:
  Build and Test:
    jobs:
      - Cache Build
      - Demo:
          requires:
            - Cache Build
      - Test:
          name: Test - Node.js v<< matrix.node-version >>
          requires:
            - Cache Build
          matrix:
            parameters:
              node-version:
                - "14"
                - "16"
                - "18"
                - "20"
      - node/run:
          name: Check Error Code Doc
          npm-run: error-code-doc:check
      - node/run:
          name: Check GraphQL Types
          npm-run: codegen:check
      - node/run:
          name: Check Hints Code Doc
          override-ci-command: npm ci && npm run compile
          npm-run: hints-doc:check
      - node/run:
          name: Check Spelling
          npm-run: spell:check
